{
    "image_dir": "data/visdrone_data/Custom_4Class_labels_vehicles/VisDrone2019-DET-train/images",
    "label_dir": "data/visdrone_data/Custom_4Class_labels_vehicles/VisDrone2019-DET-train/labels",
    "use_even_odd_images": "all",
    "log_dir": "runs/train_adversarial",
    "tensorboard_port": 8994,
    "tensorboard_batch_log_interval": 15,
    "weights_file": "runs/train/s_coco_e100_4Class_Vehicle/weights/best.pt",
    "triplet_printfile": "adv_patch_gen/utils/30_rgb_triplets.csv",
    "device": "cuda:0",
    "use_amp": true,
    "patch_name": "base",
    "patch_save_epoch_freq": 1,
    "model_in_sz": [
        640,
        640
    ],
    "patch_src": "gray",
    "patch_size": [
        64,
        64
    ],
    "objective_class_id": null,
    "target_size_frac": 0.3,
    "rotate_patches": true,
    "transform_patches": true,
    "patch_alpha": 1,
    "n_classes": 4,
    "n_epochs": 300,
    "max_labels": 48,
    "start_lr": 0.03,
    "min_tv_loss": 0.1,
    "tv_mult": 2.5,
    "nps_mult": 0.01,
    "batch_size": 8,
    "debug_mode": false,
    "loss_target": "obj * cls",
    "<-------------->": "# comments below",
    "<use_even_odd_images>": "# (str), ('all', 'even', 'odd'): use images with even/odd numbers in the last char of their filenames",
    "<model_in_sz>": "# (int, int): model input height, width",
    "<patch_name>": "# (str): gray random, or path_to_init_patch",
    "<patch_size>": "# (int, int): must be (height, width)",
    "<objective_class_id>": "# (int): class id to target for adv attack. Use null for general attack for all classes",
    "<rotate_patches>": "# (bool): rotate patches or not",
    "<transform_patches>": "# (bool): add bightness, contrast and noise transforms to patches or not",
    "<device>": "# (str): 'cpu' or 'cuda' or 'cuda:0,1,2,3'",
    "<debug_mode>": "# (bool): if yes, images with adv drawn saved during each batch",
    "<loss_target>": "# (str): 'obj', 'cls', 'obj * cls'"
}